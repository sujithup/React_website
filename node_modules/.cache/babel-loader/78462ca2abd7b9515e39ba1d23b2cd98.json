{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  } // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n\n\n  if (!key) {\n    return false;\n  }\n\n  if (str || arr) {\n    val = value.length;\n  }\n\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nexports['default'] = range;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/sachin/Desktop/React/photography/node_modules/async-validator/lib/rule/range.js"],"names":["Object","defineProperty","exports","value","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","_util","require","util","range","rule","source","errors","options","len","min","max","val","num","str","arr","Array","isArray","length","push","format","messages","fullField","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (str || arr) {\n    val = value.length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nexports['default'] = range;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}