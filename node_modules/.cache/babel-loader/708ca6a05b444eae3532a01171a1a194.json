{"ast":null,"code":"/*\n * utils for gregorian date\n * @ignore\n * @author yiminghe@gmail.com\n */\n'use strict';\n\nvar Const = require('./const');\n\nvar floor = Math.floor;\nvar ACCUMULATED_DAYS_IN_MONTH //   1/1 2/1 3/1 4/1 5/1 6/1 7/1 8/1 9/1 10/1 11/1 12/1\n= [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nvar ACCUMULATED_DAYS_IN_MONTH_LEAP //   1/1 2/1   3/1   4/1   5/1   6/1   7/1   8/1   9/1\n// 10/1   11/1   12/1\n= [0, 31, 59 + 1, 90 + 1, 120 + 1, 151 + 1, 181 + 1, 212 + 1, 243 + 1, 273 + 1, 304 + 1, 334 + 1];\nvar DAYS_OF_YEAR = 365;\nvar DAYS_OF_4YEAR = 365 * 4 + 1;\nvar DAYS_OF_100YEAR = DAYS_OF_4YEAR * 25 - 1;\nvar DAYS_OF_400YEAR = DAYS_OF_100YEAR * 4 + 1;\nvar _exports = {};\n\nfunction getDayOfYear(year, month, dayOfMonth) {\n  return dayOfMonth + (_exports.isLeapYear(year) ? ACCUMULATED_DAYS_IN_MONTH_LEAP[month] : ACCUMULATED_DAYS_IN_MONTH[month]);\n}\n\nfunction getDayOfWeekFromFixedDate(fixedDate) {\n  // The fixed day 1 (January 1, 1 Gregorian) is Monday.\n  if (fixedDate >= 0) {\n    return fixedDate % 7;\n  }\n\n  return _exports.mod(fixedDate, 7);\n}\n\nfunction getGregorianYearFromFixedDate(fixedDate) {\n  var d0 = undefined;\n  var d1 = undefined;\n  var d2 = undefined;\n  var d3 = undefined;\n  var n400 = undefined;\n  var n100 = undefined;\n  var n4 = undefined;\n  var n1 = undefined;\n  var year = undefined;\n  d0 = fixedDate - 1;\n  n400 = floor(d0 / DAYS_OF_400YEAR);\n  d1 = _exports.mod(d0, DAYS_OF_400YEAR);\n  n100 = floor(d1 / DAYS_OF_100YEAR);\n  d2 = _exports.mod(d1, DAYS_OF_100YEAR);\n  n4 = floor(d2 / DAYS_OF_4YEAR);\n  d3 = _exports.mod(d2, DAYS_OF_4YEAR);\n  n1 = floor(d3 / DAYS_OF_YEAR);\n  year = 400 * n400 + 100 * n100 + 4 * n4 + n1; // ?\n\n  if (!(n100 === 4 || n1 === 4)) {\n    ++year;\n  }\n\n  return year;\n}\n\n_exports = module.exports = {\n  each: function each(arr, fn) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (fn(arr[i], i, arr) === false) {\n        break;\n      }\n    }\n  },\n  mix: function mix(t, s) {\n    for (var p in s) {\n      if (s.hasOwnProperty(p)) {\n        t[p] = s[p];\n      }\n    }\n  },\n  isLeapYear: function isLeapYear(year) {\n    if ((year & 3) !== 0) {\n      return false;\n    }\n\n    return year % 100 !== 0 || year % 400 === 0;\n  },\n  mod: function mod(x, y) {\n    // 负数时不是镜像关系\n    return x - y * floor(x / y);\n  },\n  // month: 0 based\n  getFixedDate: function getFixedDate(year, month, dayOfMonth) {\n    var prevYear = year - 1; // 考虑公元前\n\n    return DAYS_OF_YEAR * prevYear + floor(prevYear / 4) - floor(prevYear / 100) + floor(prevYear / 400) + getDayOfYear(year, month, dayOfMonth);\n  },\n  getGregorianDateFromFixedDate: function getGregorianDateFromFixedDate(fixedDate) {\n    var year = getGregorianYearFromFixedDate(fixedDate);\n\n    var jan1 = _exports.getFixedDate(year, Const.JANUARY, 1);\n\n    var isLeap = _exports.isLeapYear(year);\n\n    var ACCUMULATED_DAYS = isLeap ? ACCUMULATED_DAYS_IN_MONTH_LEAP : ACCUMULATED_DAYS_IN_MONTH;\n    var daysDiff = fixedDate - jan1;\n    var month = undefined;\n\n    for (var i = 0; i < ACCUMULATED_DAYS.length; i++) {\n      if (ACCUMULATED_DAYS[i] <= daysDiff) {\n        month = i;\n      } else {\n        break;\n      }\n    }\n\n    var dayOfMonth = fixedDate - jan1 - ACCUMULATED_DAYS[month] + 1;\n    var dayOfWeek = getDayOfWeekFromFixedDate(fixedDate);\n    return {\n      year: year,\n      month: month,\n      dayOfMonth: dayOfMonth,\n      dayOfWeek: dayOfWeek,\n      isLeap: isLeap\n    };\n  }\n};","map":{"version":3,"sources":["/home/sachin/Desktop/React/photography/node_modules/gregorian-calendar/lib/utils.js"],"names":["Const","require","floor","Math","ACCUMULATED_DAYS_IN_MONTH","ACCUMULATED_DAYS_IN_MONTH_LEAP","DAYS_OF_YEAR","DAYS_OF_4YEAR","DAYS_OF_100YEAR","DAYS_OF_400YEAR","_exports","getDayOfYear","year","month","dayOfMonth","isLeapYear","getDayOfWeekFromFixedDate","fixedDate","mod","getGregorianYearFromFixedDate","d0","undefined","d1","d2","d3","n400","n100","n4","n1","module","exports","each","arr","fn","i","len","length","mix","t","s","p","hasOwnProperty","x","y","getFixedDate","prevYear","getGregorianDateFromFixedDate","jan1","JANUARY","isLeap","ACCUMULATED_DAYS","daysDiff","dayOfWeek"],"mappings":"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","sourcesContent":["/*\n * utils for gregorian date\n * @ignore\n * @author yiminghe@gmail.com\n */\n\n'use strict';\n\nvar Const = require('./const');\nvar floor = Math.floor;\nvar ACCUMULATED_DAYS_IN_MONTH\n//   1/1 2/1 3/1 4/1 5/1 6/1 7/1 8/1 9/1 10/1 11/1 12/1\n= [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\nvar ACCUMULATED_DAYS_IN_MONTH_LEAP\n//   1/1 2/1   3/1   4/1   5/1   6/1   7/1   8/1   9/1\n// 10/1   11/1   12/1\n= [0, 31, 59 + 1, 90 + 1, 120 + 1, 151 + 1, 181 + 1, 212 + 1, 243 + 1, 273 + 1, 304 + 1, 334 + 1];\n\nvar DAYS_OF_YEAR = 365;\nvar DAYS_OF_4YEAR = 365 * 4 + 1;\nvar DAYS_OF_100YEAR = DAYS_OF_4YEAR * 25 - 1;\nvar DAYS_OF_400YEAR = DAYS_OF_100YEAR * 4 + 1;\nvar _exports = {};\n\nfunction getDayOfYear(year, month, dayOfMonth) {\n  return dayOfMonth + (_exports.isLeapYear(year) ? ACCUMULATED_DAYS_IN_MONTH_LEAP[month] : ACCUMULATED_DAYS_IN_MONTH[month]);\n}\n\nfunction getDayOfWeekFromFixedDate(fixedDate) {\n  // The fixed day 1 (January 1, 1 Gregorian) is Monday.\n  if (fixedDate >= 0) {\n    return fixedDate % 7;\n  }\n  return _exports.mod(fixedDate, 7);\n}\n\nfunction getGregorianYearFromFixedDate(fixedDate) {\n  var d0 = undefined;\n  var d1 = undefined;\n  var d2 = undefined;\n  var d3 = undefined;\n  var n400 = undefined;\n  var n100 = undefined;\n  var n4 = undefined;\n  var n1 = undefined;\n  var year = undefined;\n  d0 = fixedDate - 1;\n\n  n400 = floor(d0 / DAYS_OF_400YEAR);\n  d1 = _exports.mod(d0, DAYS_OF_400YEAR);\n  n100 = floor(d1 / DAYS_OF_100YEAR);\n  d2 = _exports.mod(d1, DAYS_OF_100YEAR);\n  n4 = floor(d2 / DAYS_OF_4YEAR);\n  d3 = _exports.mod(d2, DAYS_OF_4YEAR);\n  n1 = floor(d3 / DAYS_OF_YEAR);\n\n  year = 400 * n400 + 100 * n100 + 4 * n4 + n1;\n\n  // ?\n  if (!(n100 === 4 || n1 === 4)) {\n    ++year;\n  }\n\n  return year;\n}\n\n_exports = module.exports = {\n  each: function each(arr, fn) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (fn(arr[i], i, arr) === false) {\n        break;\n      }\n    }\n  },\n\n  mix: function mix(t, s) {\n    for (var p in s) {\n      if (s.hasOwnProperty(p)) {\n        t[p] = s[p];\n      }\n    }\n  },\n\n  isLeapYear: function isLeapYear(year) {\n    if ((year & 3) !== 0) {\n      return false;\n    }\n    return year % 100 !== 0 || year % 400 === 0;\n  },\n\n  mod: function mod(x, y) {\n    // 负数时不是镜像关系\n    return x - y * floor(x / y);\n  },\n\n  // month: 0 based\n  getFixedDate: function getFixedDate(year, month, dayOfMonth) {\n    var prevYear = year - 1;\n    // 考虑公元前\n    return DAYS_OF_YEAR * prevYear + floor(prevYear / 4) - floor(prevYear / 100) + floor(prevYear / 400) + getDayOfYear(year, month, dayOfMonth);\n  },\n\n  getGregorianDateFromFixedDate: function getGregorianDateFromFixedDate(fixedDate) {\n    var year = getGregorianYearFromFixedDate(fixedDate);\n    var jan1 = _exports.getFixedDate(year, Const.JANUARY, 1);\n    var isLeap = _exports.isLeapYear(year);\n    var ACCUMULATED_DAYS = isLeap ? ACCUMULATED_DAYS_IN_MONTH_LEAP : ACCUMULATED_DAYS_IN_MONTH;\n    var daysDiff = fixedDate - jan1;\n    var month = undefined;\n\n    for (var i = 0; i < ACCUMULATED_DAYS.length; i++) {\n      if (ACCUMULATED_DAYS[i] <= daysDiff) {\n        month = i;\n      } else {\n        break;\n      }\n    }\n\n    var dayOfMonth = fixedDate - jan1 - ACCUMULATED_DAYS[month] + 1;\n    var dayOfWeek = getDayOfWeekFromFixedDate(fixedDate);\n\n    return {\n      year: year,\n      month: month,\n      dayOfMonth: dayOfMonth,\n      dayOfWeek: dayOfWeek,\n      isLeap: isLeap\n    };\n  }\n};"]},"metadata":{},"sourceType":"script"}