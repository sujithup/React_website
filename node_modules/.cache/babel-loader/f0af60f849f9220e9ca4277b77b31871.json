{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nvar _messages3 = _interopRequireDefault(_messages2);\n\nvar _rule = require('./rule/');\n\nfunction asyncMap(arr, func, callback) {\n  var results = [];\n\n  function count(_, result) {\n    results.push(result);\n\n    if (results.length === arr.length) {\n      callback(null, results);\n    }\n  }\n\n  arr.forEach(function (a) {\n    func(a, count);\n  });\n}\n\nfunction complementError(rule) {\n  return function (oe) {\n    var e = oe;\n\n    if (!e.message) {\n      e = new Error(e);\n    }\n\n    e.field = e.field || rule.fullField;\n    return e;\n  };\n}\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\n\n\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages3['default'];\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = _messages;\n    }\n\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n\n    this.rules = {};\n    var z = undefined;\n    var item = undefined;\n\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source, o, oc) {\n    var _this = this;\n\n    if (!this.rules) {\n      throw new Error('Cannot validate with no rules.');\n    }\n\n    var callback = oc;\n    var options = o || {};\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    function complete(results) {\n      var i = undefined;\n      var field = undefined;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (e instanceof Error) {\n          errors.push(e);\n        } else if (Array.isArray(e)) {\n          errors = errors.concat.apply(errors, e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        if (options.single) {\n          errors = errors.slice(0, 1);\n        }\n\n        for (i = 0; i < errors.length; i++) {\n          field = errors[i].field;\n          fields[field] = fields[field] || [];\n          fields[field].push(errors[i]);\n        }\n      }\n\n      callback(errors, fields);\n    }\n\n    options.messages = options.messages || this.messages();\n    options.error = _rule.error;\n    var arr = undefined;\n    var value = undefined;\n    var series = [];\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n\n        if (typeof rule.transform === 'function') {\n          value = source[z] = rule.transform(value);\n        }\n\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        rule.validator = _this.getValidationMethod(rule);\n\n        if (!rule.validator) {\n          return;\n        }\n\n        series.push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    asyncMap(series, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && typeof rule.fields === 'object';\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function cb(e) {\n        var errors = e;\n\n        if (errors && !Array.isArray(errors)) {\n          errors = [errors];\n        }\n\n        if (errors && errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n\n        if (errors) {\n          errors = errors.map(complementError(rule));\n        }\n\n        if (options.first && errors && errors.length) {\n          return doIt(errors);\n        }\n\n        if (!deep) {\n          doIt(null, errors);\n        } else {\n          errors = errors || []; // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map(complementError(rule));\n            } else {\n              errors = [options.error(rule, util.format(options.messages.required, rule.field))];\n            }\n\n            return doIt(null, errors);\n          }\n\n          var fieldsSchema = data.rule.fields;\n\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = fieldsSchema[f];\n              fieldSchema.fullField = rule.fullField + '.' + f;\n            }\n          }\n\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            doIt(null, errs && errs.length ? errors.concat(errs) : errs);\n          });\n        }\n      }\n\n      rule.validator(rule, data.value, cb, data.source, options);\n    }, function (err, results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error(util.format('Unknown rule type %s', rule.type));\n    }\n\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n\n    return _validator2['default'][rule.type] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n\n  _validator2['default'][type] = validator;\n};\n\nSchema.messages = _messages3['default'];\nexports['default'] = Schema;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/sachin/Desktop/React/photography/node_modules/async-validator/lib/index.js"],"names":["Object","defineProperty","exports","value","_interopRequireDefault","obj","__esModule","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","call","_util","require","util","_validator","_validator2","_messages2","_messages3","_rule","asyncMap","arr","func","callback","results","count","_","result","push","length","forEach","a","complementError","rule","oe","e","message","Error","field","fullField","Schema","descriptor","rules","_messages","define","messages","Array","isArray","z","undefined","item","validate","source","o","oc","_this","options","complete","i","errors","fields","add","concat","apply","single","slice","error","series","keys","r","transform","validator","type","getType","getValidationMethod","data","doIt","deep","required","cb","map","first","format","fieldsSchema","f","fieldSchema","schema","errs","err","pattern","RegExp","register","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASE,uBAAT,CAAiCF,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIG,MAAM,GAAG,EAAb;;AAAiB,QAAIH,GAAG,IAAI,IAAX,EAAiB;AAAE,WAAK,IAAII,GAAT,IAAgBJ,GAAhB,EAAqB;AAAE,YAAIL,MAAM,CAACU,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,GAArC,EAA0CI,GAA1C,CAAJ,EAAoDD,MAAM,CAACC,GAAD,CAAN,GAAcJ,GAAG,CAACI,GAAD,CAAjB;AAAyB;AAAE;;AAACD,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBH,GAApB;AAAyB,WAAOG,MAAP;AAAgB;AAAE;;AAEhR,IAAIK,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGR,uBAAuB,CAACM,KAAD,CAAlC;;AAEA,IAAIG,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIG,WAAW,GAAGb,sBAAsB,CAACY,UAAD,CAAxC;;AAEA,IAAIE,UAAU,GAAGJ,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIK,UAAU,GAAGf,sBAAsB,CAACc,UAAD,CAAvC;;AAEA,IAAIE,KAAK,GAAGN,OAAO,CAAC,SAAD,CAAnB;;AAEA,SAASO,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,OAAO,GAAG,EAAd;;AAEA,WAASC,KAAT,CAAeC,CAAf,EAAkBC,MAAlB,EAA0B;AACxBH,IAAAA,OAAO,CAACI,IAAR,CAAaD,MAAb;;AACA,QAAIH,OAAO,CAACK,MAAR,KAAmBR,GAAG,CAACQ,MAA3B,EAAmC;AACjCN,MAAAA,QAAQ,CAAC,IAAD,EAAOC,OAAP,CAAR;AACD;AACF;;AAEDH,EAAAA,GAAG,CAACS,OAAJ,CAAY,UAAUC,CAAV,EAAa;AACvBT,IAAAA,IAAI,CAACS,CAAD,EAAIN,KAAJ,CAAJ;AACD,GAFD;AAGD;;AAED,SAASO,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO,UAAUC,EAAV,EAAc;AACnB,QAAIC,CAAC,GAAGD,EAAR;;AACA,QAAI,CAACC,CAAC,CAACC,OAAP,EAAgB;AACdD,MAAAA,CAAC,GAAG,IAAIE,KAAJ,CAAUF,CAAV,CAAJ;AACD;;AACDA,IAAAA,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACG,KAAF,IAAWL,IAAI,CAACM,SAA1B;AACA,WAAOJ,CAAP;AACD,GAPD;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,MAAT,CAAgBC,UAAhB,EAA4B;AAC1B,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,SAAL,GAAiBzB,UAAU,CAAC,SAAD,CAA3B;AACA,OAAK0B,MAAL,CAAYH,UAAZ;AACD;;AAEDD,MAAM,CAAC/B,SAAP,GAAmB;AACjBoC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBF,SAAlB,EAA6B;AACrC,QAAIA,SAAJ,EAAe;AACb,WAAKA,SAAL,GAAiBA,SAAjB;AACD;;AACD,WAAO,KAAKA,SAAZ;AACD,GANgB;AAOjBC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBF,KAAhB,EAAuB;AAC7B,QAAI,CAACA,KAAL,EAAY;AACV,YAAM,IAAIL,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,QAAI,OAAOK,KAAP,KAAiB,QAAjB,IAA6BI,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAjC,EAAuD;AACrD,YAAM,IAAIL,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,SAAKK,KAAL,GAAa,EAAb;AACA,QAAIM,CAAC,GAAGC,SAAR;AACA,QAAIC,IAAI,GAAGD,SAAX;;AACA,SAAKD,CAAL,IAAUN,KAAV,EAAiB;AACf,UAAIA,KAAK,CAAChC,cAAN,CAAqBsC,CAArB,CAAJ,EAA6B;AAC3BE,QAAAA,IAAI,GAAGR,KAAK,CAACM,CAAD,CAAZ;AACA,aAAKN,KAAL,CAAWM,CAAX,IAAgBF,KAAK,CAACC,OAAN,CAAcG,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA7C;AACD;AACF;AACF,GAvBgB;AAwBjBC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,CAA1B,EAA6BC,EAA7B,EAAiC;AACzC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAI,CAAC,KAAKb,KAAV,EAAiB;AACf,YAAM,IAAIL,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,QAAId,QAAQ,GAAG+B,EAAf;AACA,QAAIE,OAAO,GAAGH,CAAC,IAAI,EAAnB;;AACA,QAAI,OAAOG,OAAP,KAAmB,UAAvB,EAAmC;AACjCjC,MAAAA,QAAQ,GAAGiC,OAAX;AACAA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACD,aAASC,QAAT,CAAkBjC,OAAlB,EAA2B;AACzB,UAAIkC,CAAC,GAAGT,SAAR;AACA,UAAIX,KAAK,GAAGW,SAAZ;AACA,UAAIU,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAG,EAAb;;AAEA,eAASC,GAAT,CAAa1B,CAAb,EAAgB;AACd,YAAIA,CAAC,YAAYE,KAAjB,EAAwB;AACtBsB,UAAAA,MAAM,CAAC/B,IAAP,CAAYO,CAAZ;AACD,SAFD,MAEO,IAAIW,KAAK,CAACC,OAAN,CAAcZ,CAAd,CAAJ,EAAsB;AAC3BwB,UAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoBJ,MAApB,EAA4BxB,CAA5B,CAAT;AACD;AACF;;AAED,WAAKuB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlC,OAAO,CAACK,MAAxB,EAAgC6B,CAAC,EAAjC,EAAqC;AACnCG,QAAAA,GAAG,CAACrC,OAAO,CAACkC,CAAD,CAAR,CAAH;AACD;;AACD,UAAI,CAACC,MAAM,CAAC9B,MAAZ,EAAoB;AAClB8B,QAAAA,MAAM,GAAG,IAAT;AACAC,QAAAA,MAAM,GAAG,IAAT;AACD,OAHD,MAGO;AACL,YAAIJ,OAAO,CAACQ,MAAZ,EAAoB;AAClBL,UAAAA,MAAM,GAAGA,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAT;AACD;;AACD,aAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC9B,MAAvB,EAA+B6B,CAAC,EAAhC,EAAoC;AAClCpB,UAAAA,KAAK,GAAGqB,MAAM,CAACD,CAAD,CAAN,CAAUpB,KAAlB;AACAsB,UAAAA,MAAM,CAACtB,KAAD,CAAN,GAAgBsB,MAAM,CAACtB,KAAD,CAAN,IAAiB,EAAjC;AACAsB,UAAAA,MAAM,CAACtB,KAAD,CAAN,CAAcV,IAAd,CAAmB+B,MAAM,CAACD,CAAD,CAAzB;AACD;AACF;;AACDnC,MAAAA,QAAQ,CAACoC,MAAD,EAASC,MAAT,CAAR;AACD;;AAEDJ,IAAAA,OAAO,CAACX,QAAR,GAAmBW,OAAO,CAACX,QAAR,IAAoB,KAAKA,QAAL,EAAvC;AACAW,IAAAA,OAAO,CAACU,KAAR,GAAgB/C,KAAK,CAAC+C,KAAtB;AACA,QAAI7C,GAAG,GAAG4B,SAAV;AACA,QAAI/C,KAAK,GAAG+C,SAAZ;AACA,QAAIkB,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAGZ,OAAO,CAACY,IAAR,IAAgBrE,MAAM,CAACqE,IAAP,CAAY,KAAK1B,KAAjB,CAA3B;AACA0B,IAAAA,IAAI,CAACtC,OAAL,CAAa,UAAUkB,CAAV,EAAa;AACxB3B,MAAAA,GAAG,GAAGkC,KAAK,CAACb,KAAN,CAAYM,CAAZ,CAAN;AACA9C,MAAAA,KAAK,GAAGkD,MAAM,CAACJ,CAAD,CAAd;AACA3B,MAAAA,GAAG,CAACS,OAAJ,CAAY,UAAUuC,CAAV,EAAa;AACvB,YAAIpC,IAAI,GAAGoC,CAAX;;AACA,YAAI,OAAOpC,IAAI,CAACqC,SAAZ,KAA0B,UAA9B,EAA0C;AACxCpE,UAAAA,KAAK,GAAGkD,MAAM,CAACJ,CAAD,CAAN,GAAYf,IAAI,CAACqC,SAAL,CAAepE,KAAf,CAApB;AACD;;AACD,YAAI,OAAO+B,IAAP,KAAgB,UAApB,EAAgC;AAC9BA,UAAAA,IAAI,GAAG;AACLsC,YAAAA,SAAS,EAAEtC;AADN,WAAP;AAGD;;AACDA,QAAAA,IAAI,CAACK,KAAL,GAAaU,CAAb;AACAf,QAAAA,IAAI,CAACM,SAAL,GAAiBN,IAAI,CAACM,SAAL,IAAkBS,CAAnC;AACAf,QAAAA,IAAI,CAACuC,IAAL,GAAYjB,KAAK,CAACkB,OAAN,CAAcxC,IAAd,CAAZ;AACAA,QAAAA,IAAI,CAACsC,SAAL,GAAiBhB,KAAK,CAACmB,mBAAN,CAA0BzC,IAA1B,CAAjB;;AACA,YAAI,CAACA,IAAI,CAACsC,SAAV,EAAqB;AACnB;AACD;;AACDJ,QAAAA,MAAM,CAACvC,IAAP,CAAY;AAAEK,UAAAA,IAAI,EAAEA,IAAR;AAAc/B,UAAAA,KAAK,EAAEA,KAArB;AAA4BkD,UAAAA,MAAM,EAAEA,MAApC;AAA4Cd,UAAAA,KAAK,EAAEU;AAAnD,SAAZ;AACD,OAlBD;AAmBD,KAtBD;AAuBA5B,IAAAA,QAAQ,CAAC+C,MAAD,EAAS,UAAUQ,IAAV,EAAgBC,IAAhB,EAAsB;AACrC,UAAI3C,IAAI,GAAG0C,IAAI,CAAC1C,IAAhB;AACA,UAAI4C,IAAI,GAAG,CAAC5C,IAAI,CAACuC,IAAL,KAAc,QAAd,IAA0BvC,IAAI,CAACuC,IAAL,KAAc,OAAzC,KAAqD,OAAOvC,IAAI,CAAC2B,MAAZ,KAAuB,QAAvF;AACAiB,MAAAA,IAAI,GAAGA,IAAI,KAAK5C,IAAI,CAAC6C,QAAL,IAAiB,CAAC7C,IAAI,CAAC6C,QAAN,IAAkBH,IAAI,CAACzE,KAA7C,CAAX;AACA+B,MAAAA,IAAI,CAACK,KAAL,GAAaqC,IAAI,CAACrC,KAAlB;;AACA,eAASyC,EAAT,CAAY5C,CAAZ,EAAe;AACb,YAAIwB,MAAM,GAAGxB,CAAb;;AACA,YAAIwB,MAAM,IAAI,CAACb,KAAK,CAACC,OAAN,CAAcY,MAAd,CAAf,EAAsC;AACpCA,UAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACD;;AACD,YAAIA,MAAM,IAAIA,MAAM,CAAC9B,MAAjB,IAA2BI,IAAI,CAACG,OAApC,EAA6C;AAC3CuB,UAAAA,MAAM,GAAG,GAAGG,MAAH,CAAU7B,IAAI,CAACG,OAAf,CAAT;AACD;;AACD,YAAIuB,MAAJ,EAAY;AACVA,UAAAA,MAAM,GAAGA,MAAM,CAACqB,GAAP,CAAWhD,eAAe,CAACC,IAAD,CAA1B,CAAT;AACD;;AACD,YAAIuB,OAAO,CAACyB,KAAR,IAAiBtB,MAAjB,IAA2BA,MAAM,CAAC9B,MAAtC,EAA8C;AAC5C,iBAAO+C,IAAI,CAACjB,MAAD,CAAX;AACD;;AACD,YAAI,CAACkB,IAAL,EAAW;AACTD,UAAAA,IAAI,CAAC,IAAD,EAAOjB,MAAP,CAAJ;AACD,SAFD,MAEO;AACLA,UAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB,CADK,CAEL;AACA;AACA;;AACA,cAAI1B,IAAI,CAAC6C,QAAL,IAAiB,CAACH,IAAI,CAACzE,KAA3B,EAAkC;AAChC,gBAAI+B,IAAI,CAACG,OAAT,EAAkB;AAChBuB,cAAAA,MAAM,GAAG,GAAGG,MAAH,CAAU7B,IAAI,CAACG,OAAf,EAAwB4C,GAAxB,CAA4BhD,eAAe,CAACC,IAAD,CAA3C,CAAT;AACD,aAFD,MAEO;AACL0B,cAAAA,MAAM,GAAG,CAACH,OAAO,CAACU,KAAR,CAAcjC,IAAd,EAAoBnB,IAAI,CAACoE,MAAL,CAAY1B,OAAO,CAACX,QAAR,CAAiBiC,QAA7B,EAAuC7C,IAAI,CAACK,KAA5C,CAApB,CAAD,CAAT;AACD;;AACD,mBAAOsC,IAAI,CAAC,IAAD,EAAOjB,MAAP,CAAX;AACD;;AACD,cAAIwB,YAAY,GAAGR,IAAI,CAAC1C,IAAL,CAAU2B,MAA7B;;AACA,eAAK,IAAIwB,CAAT,IAAcD,YAAd,EAA4B;AAC1B,gBAAIA,YAAY,CAACzE,cAAb,CAA4B0E,CAA5B,CAAJ,EAAoC;AAClC,kBAAIC,WAAW,GAAGF,YAAY,CAACC,CAAD,CAA9B;AACAC,cAAAA,WAAW,CAAC9C,SAAZ,GAAwBN,IAAI,CAACM,SAAL,GAAiB,GAAjB,GAAuB6C,CAA/C;AACD;AACF;;AACD,cAAIE,MAAM,GAAG,IAAI9C,MAAJ,CAAW2C,YAAX,CAAb;AACAG,UAAAA,MAAM,CAACzC,QAAP,CAAgBW,OAAO,CAACX,QAAxB;;AACA,cAAI8B,IAAI,CAAC1C,IAAL,CAAUuB,OAAd,EAAuB;AACrBmB,YAAAA,IAAI,CAAC1C,IAAL,CAAUuB,OAAV,CAAkBX,QAAlB,GAA6BW,OAAO,CAACX,QAArC;AACA8B,YAAAA,IAAI,CAAC1C,IAAL,CAAUuB,OAAV,CAAkBU,KAAlB,GAA0BV,OAAO,CAACU,KAAlC;AACD;;AACDoB,UAAAA,MAAM,CAACnC,QAAP,CAAgBwB,IAAI,CAACzE,KAArB,EAA4ByE,IAAI,CAAC1C,IAAL,CAAUuB,OAAV,IAAqBA,OAAjD,EAA0D,UAAU+B,IAAV,EAAgB;AACxEX,YAAAA,IAAI,CAAC,IAAD,EAAOW,IAAI,IAAIA,IAAI,CAAC1D,MAAb,GAAsB8B,MAAM,CAACG,MAAP,CAAcyB,IAAd,CAAtB,GAA4CA,IAAnD,CAAJ;AACD,WAFD;AAGD;AACF;;AAEDtD,MAAAA,IAAI,CAACsC,SAAL,CAAetC,IAAf,EAAqB0C,IAAI,CAACzE,KAA1B,EAAiC6E,EAAjC,EAAqCJ,IAAI,CAACvB,MAA1C,EAAkDI,OAAlD;AACD,KAtDO,EAsDL,UAAUgC,GAAV,EAAehE,OAAf,EAAwB;AACzBiC,MAAAA,QAAQ,CAACjC,OAAD,CAAR;AACD,KAxDO,CAAR;AAyDD,GA3JgB;AA4JjBiD,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBxC,IAAjB,EAAuB;AAC9B,QAAIA,IAAI,CAACuC,IAAL,KAAcvB,SAAd,IAA2BhB,IAAI,CAACwD,OAAL,YAAwBC,MAAvD,EAA+D;AAC7DzD,MAAAA,IAAI,CAACuC,IAAL,GAAY,SAAZ;AACD;;AACD,QAAI,OAAOvC,IAAI,CAACsC,SAAZ,KAA0B,UAA1B,IAAwCtC,IAAI,CAACuC,IAA7C,IAAqD,CAACxD,WAAW,CAAC,SAAD,CAAX,CAAuBN,cAAvB,CAAsCuB,IAAI,CAACuC,IAA3C,CAA1D,EAA4G;AAC1G,YAAM,IAAInC,KAAJ,CAAUvB,IAAI,CAACoE,MAAL,CAAY,sBAAZ,EAAoCjD,IAAI,CAACuC,IAAzC,CAAV,CAAN;AACD;;AACD,WAAOvC,IAAI,CAACuC,IAAL,IAAa,QAApB;AACD,GApKgB;AAqKjBE,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BzC,IAA7B,EAAmC;AACtD,QAAI,OAAOA,IAAI,CAACsC,SAAZ,KAA0B,UAA9B,EAA0C;AACxC,aAAOtC,IAAI,CAACsC,SAAZ;AACD;;AACD,WAAOvD,WAAW,CAAC,SAAD,CAAX,CAAuBiB,IAAI,CAACuC,IAA5B,KAAqC,KAA5C;AACD;AA1KgB,CAAnB;;AA6KAhC,MAAM,CAACmD,QAAP,GAAkB,SAASA,QAAT,CAAkBnB,IAAlB,EAAwBD,SAAxB,EAAmC;AACnD,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,UAAM,IAAIlC,KAAJ,CAAU,kEAAV,CAAN;AACD;;AACDrB,EAAAA,WAAW,CAAC,SAAD,CAAX,CAAuBwD,IAAvB,IAA+BD,SAA/B;AACD,CALD;;AAOA/B,MAAM,CAACK,QAAP,GAAkB3B,UAAU,CAAC,SAAD,CAA5B;AAEAjB,OAAO,CAAC,SAAD,CAAP,GAAqBuC,MAArB;AACAoD,MAAM,CAAC3F,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _util = require('./util');\n\nvar util = _interopRequireWildcard(_util);\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nvar _messages3 = _interopRequireDefault(_messages2);\n\nvar _rule = require('./rule/');\n\nfunction asyncMap(arr, func, callback) {\n  var results = [];\n\n  function count(_, result) {\n    results.push(result);\n    if (results.length === arr.length) {\n      callback(null, results);\n    }\n  }\n\n  arr.forEach(function (a) {\n    func(a, count);\n  });\n}\n\nfunction complementError(rule) {\n  return function (oe) {\n    var e = oe;\n    if (!e.message) {\n      e = new Error(e);\n    }\n    e.field = e.field || rule.fullField;\n    return e;\n  };\n}\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages3['default'];\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = _messages;\n    }\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    var z = undefined;\n    var item = undefined;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source, o, oc) {\n    var _this = this;\n\n    if (!this.rules) {\n      throw new Error('Cannot validate with no rules.');\n    }\n    var callback = oc;\n    var options = o || {};\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    function complete(results) {\n      var i = undefined;\n      var field = undefined;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (e instanceof Error) {\n          errors.push(e);\n        } else if (Array.isArray(e)) {\n          errors = errors.concat.apply(errors, e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        if (options.single) {\n          errors = errors.slice(0, 1);\n        }\n        for (i = 0; i < errors.length; i++) {\n          field = errors[i].field;\n          fields[field] = fields[field] || [];\n          fields[field].push(errors[i]);\n        }\n      }\n      callback(errors, fields);\n    }\n\n    options.messages = options.messages || this.messages();\n    options.error = _rule.error;\n    var arr = undefined;\n    var value = undefined;\n    var series = [];\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n        if (typeof rule.transform === 'function') {\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        }\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        rule.validator = _this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series.push({ rule: rule, value: value, source: source, field: z });\n      });\n    });\n    asyncMap(series, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && typeof rule.fields === 'object';\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n      function cb(e) {\n        var errors = e;\n        if (errors && !Array.isArray(errors)) {\n          errors = [errors];\n        }\n        if (errors && errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n        if (errors) {\n          errors = errors.map(complementError(rule));\n        }\n        if (options.first && errors && errors.length) {\n          return doIt(errors);\n        }\n        if (!deep) {\n          doIt(null, errors);\n        } else {\n          errors = errors || [];\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map(complementError(rule));\n            } else {\n              errors = [options.error(rule, util.format(options.messages.required, rule.field))];\n            }\n            return doIt(null, errors);\n          }\n          var fieldsSchema = data.rule.fields;\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = fieldsSchema[f];\n              fieldSchema.fullField = rule.fullField + '.' + f;\n            }\n          }\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            doIt(null, errs && errs.length ? errors.concat(errs) : errs);\n          });\n        }\n      }\n\n      rule.validator(rule, data.value, cb, data.source, options);\n    }, function (err, results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error(util.format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    return _validator2['default'][rule.type] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n  _validator2['default'][type] = validator;\n};\n\nSchema.messages = _messages3['default'];\n\nexports['default'] = Schema;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}