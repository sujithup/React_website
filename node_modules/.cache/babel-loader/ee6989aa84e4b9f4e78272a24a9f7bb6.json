{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction merge() {\n  var ret = {};\n  var args = [].slice.call(arguments, 0);\n  args.forEach(function (a) {\n    Object.keys(a).forEach(function (k) {\n      ret[k] = a[k];\n    });\n  });\n  return ret;\n}\n\nvar FieldMixin = {\n  setField: function setField(field, e) {\n    var v = e;\n    var target = e && e.target;\n\n    if (target) {\n      // no radio\n      if ((target.nodeName + '').toLowerCase() === 'input' && target.type === 'checkbox') {\n        v = target.checked;\n      } else {\n        v = e.target.value;\n      }\n    }\n\n    var newFormData = {};\n    newFormData[field] = v;\n    this.setState({\n      formData: merge(this.state.formData, newFormData)\n    });\n  },\n  handleValidate: function handleValidate(status, formData) {\n    this.onValidate(status, formData);\n  },\n  onValidate: function onValidate(status, formData) {\n    this.setState({\n      status: merge(this.state.status, status),\n      formData: merge(this.state.formData, formData)\n    });\n  }\n};\nexports['default'] = FieldMixin;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/sachin/Desktop/React/photography/node_modules/rc-form-validation/lib/FieldMixin.js"],"names":["Object","defineProperty","exports","value","merge","ret","args","slice","call","arguments","forEach","a","keys","k","FieldMixin","setField","field","e","v","target","nodeName","toLowerCase","type","checked","newFormData","setState","formData","state","handleValidate","status","onValidate","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAGA,SAASC,KAAT,GAAiB;AACf,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAX;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAa,UAAUC,CAAV,EAAa;AACxBX,IAAAA,MAAM,CAACY,IAAP,CAAYD,CAAZ,EAAeD,OAAf,CAAuB,UAAUG,CAAV,EAAa;AAClCR,MAAAA,GAAG,CAACQ,CAAD,CAAH,GAASF,CAAC,CAACE,CAAD,CAAV;AACD,KAFD;AAGD,GAJD;AAKA,SAAOR,GAAP;AACD;;AAED,IAAIS,UAAU,GAAG;AACfC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,CAAzB,EAA4B;AACpC,QAAIC,CAAC,GAAGD,CAAR;AACA,QAAIE,MAAM,GAAGF,CAAC,IAAIA,CAAC,CAACE,MAApB;;AACA,QAAIA,MAAJ,EAAY;AACV;AACA,UAAI,CAACA,MAAM,CAACC,QAAP,GAAkB,EAAnB,EAAuBC,WAAvB,OAAyC,OAAzC,IAAoDF,MAAM,CAACG,IAAP,KAAgB,UAAxE,EAAoF;AAClFJ,QAAAA,CAAC,GAAGC,MAAM,CAACI,OAAX;AACD,OAFD,MAEO;AACLL,QAAAA,CAAC,GAAGD,CAAC,CAACE,MAAF,CAAShB,KAAb;AACD;AACF;;AACD,QAAIqB,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACR,KAAD,CAAX,GAAqBE,CAArB;AACA,SAAKO,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAEtB,KAAK,CAAC,KAAKuB,KAAL,CAAWD,QAAZ,EAAsBF,WAAtB;AADH,KAAd;AAGD,GAjBc;AAmBfI,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,MAAxB,EAAgCH,QAAhC,EAA0C;AACxD,SAAKI,UAAL,CAAgBD,MAAhB,EAAwBH,QAAxB;AACD,GArBc;AAuBfI,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBD,MAApB,EAA4BH,QAA5B,EAAsC;AAChD,SAAKD,QAAL,CAAc;AACZI,MAAAA,MAAM,EAAEzB,KAAK,CAAC,KAAKuB,KAAL,CAAWE,MAAZ,EAAoBA,MAApB,CADD;AAEZH,MAAAA,QAAQ,EAAEtB,KAAK,CAAC,KAAKuB,KAAL,CAAWD,QAAZ,EAAsBA,QAAtB;AAFH,KAAd;AAID;AA5Bc,CAAjB;AA+BAxB,OAAO,CAAC,SAAD,CAAP,GAAqBY,UAArB;AACAiB,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction merge() {\n  var ret = {};\n  var args = [].slice.call(arguments, 0);\n  args.forEach(function (a) {\n    Object.keys(a).forEach(function (k) {\n      ret[k] = a[k];\n    });\n  });\n  return ret;\n}\n\nvar FieldMixin = {\n  setField: function setField(field, e) {\n    var v = e;\n    var target = e && e.target;\n    if (target) {\n      // no radio\n      if ((target.nodeName + '').toLowerCase() === 'input' && target.type === 'checkbox') {\n        v = target.checked;\n      } else {\n        v = e.target.value;\n      }\n    }\n    var newFormData = {};\n    newFormData[field] = v;\n    this.setState({\n      formData: merge(this.state.formData, newFormData)\n    });\n  },\n\n  handleValidate: function handleValidate(status, formData) {\n    this.onValidate(status, formData);\n  },\n\n  onValidate: function onValidate(status, formData) {\n    this.setState({\n      status: merge(this.state.status, status),\n      formData: merge(this.state.formData, formData)\n    });\n  }\n};\n\nexports['default'] = FieldMixin;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}